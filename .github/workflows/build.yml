name: Github Action build workflow

on:
  push:
    branches: [ main ]

jobs:
  run:
    runs-on: self-hosted
    environment: production

    steps:
      - uses: actions/checkout@v4

      - name: Check for changes in requirements.txt
        id: check
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^requirements.txt$'; then
            echo "deps_changed=true" >> $GITHUB_ENV
          else
            echo "deps_changed=false" >> $GITHUB_ENV
          fi

      - name: Check if only changes were made in docs or README
        id: check_docs
        run: |
          total_changes=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | wc -l)
          docs_changes=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | egrep '^docs/|^README.md$' | wc -l)
          if [ "$total_changes" -eq "$docs_changes" ]; then
            echo "only_docs_changed=true" >> $GITHUB_ENV
          else
            echo "only_docs_changed=false" >> $GITHUB_ENV
          fi

      - name: Create .env files
        run: |
          echo "FLASK_SECRET_KEY=${{ secrets.FLASK_SECRET_KEY }}" > .env
          echo "FLASK_DEBUG_MODE=${{ secrets.FLASK_DEBUG_MODE }}" >> .env
          echo "POSTGRES_URL=${{ secrets.POSTGRES_URL }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          mkdir -p ./discord_bot/
          echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" > ./discord_bot/.env

      - name: Run Env
        run: bash env.sh
        if: env.deps_changed == 'true'

      - name: Run Build
        run: bash build.sh
        if: env.only_docs_changed == 'false'

      - name: Cleanup Unused Images
        run: docker image prune -f