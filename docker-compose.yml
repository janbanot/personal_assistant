version: '3.9'

services:
  assistant_api:
    restart: on-failure
    build:
      context: ./
      dockerfile: Dockerfile
    depends_on:
      - assistant_db
    environment:
      POSTGRES_URL: ${POSTGRES_URL}
      PYTHONPATH: /usr/src/app
  assistant_proxy:
    restart: on-failure
    build:
      context: ./nginx
      args:
        env: prod
      dockerfile: Dockerfile
    depends_on:
      - assistant_api
  assistant_db:
    image: postgres:latest
    restart: on-failure
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
  assistant_qdrant:
    image: qdrant/qdrant:latest
    volumes:
      - qdrant_data:/qdrant/storage
  assistant_bot:
    restart: on-failure
    build:
      context: ./discord_bot
      dockerfile: Dockerfile
    volumes:
      - assistant_bot_data:/app/data
  assistant_test:
    build:
      context: ./
      dockerfile: Dockerfile
    command: pytest tests/
    environment:
      POSTGRES_URL: ${POSTGRES_URL}
      PYTHONPATH: /usr/src/app
    profiles: [test]

volumes:
  postgres_data:
  qdrant_data:
  assistant_bot_data: